---
import { getCollection } from 'astro:content';
import BaseLayout from '../../../layouts/BaseLayout.astro';

export async function getStaticPaths() {
  const glossaryEntries = await getCollection('glossary');
  
  // Get unique categories
  const categories = [...new Set(glossaryEntries.map(entry => entry.data.category))];
  
  return categories.map(category => ({
    params: { 
      category: category.toLowerCase().replace(/\s+/g, '-')
    },
    props: { 
      category,
      entries: glossaryEntries.filter(entry => entry.data.category === category),
      // Group entries by vertical
      verticals: [...new Set(
        glossaryEntries
          .filter(entry => entry.data.category === category)
          .map(entry => entry.data.vertical)
      )]
    },
  }));
}

const { category, entries, verticals } = Astro.props;
---

<BaseLayout title={`${category} Glossary Terms`} description={`Glossary of terms related to ${category}`}>
  <Fragment slot="head">
    <link rel="canonical" href={new URL(Astro.url.pathname, Astro.site).toString()} />
  </Fragment>
  <main>
    <section class="bg-white">
      <div class="mx-auto max-w-7xl lg:px-16 md:px-12 px-8 xl:px-24 py-24">
        <h1 class="text-4xl font-bold tracking-tight text-gray-900 mb-4">
          {category} Terms
        </h1>
        <p class="text-xl text-gray-600 mb-12">
          Browse terms by vertical or view all terms below.
        </p>

        <!-- Vertical Links -->
        <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 mb-16">
          {verticals.map(vertical => {
            const verticalEntries = entries.filter(entry => entry.data.vertical === vertical);
            return (
              <a 
                href={`/glossary/${category.toLowerCase().replace(/\s+/g, '-')}/${vertical.toLowerCase().replace(/\s+/g, '-')}`}
                class="block p-6 bg-white rounded-2xl border border-gray-200 hover:border-blue-100 transition-all duration-200"
              >
                <h2 class="text-lg font-semibold text-gray-900">
                  {vertical}
                </h2>
                <p class="text-sm text-gray-600">
                  {verticalEntries.length} terms
                </p>
              </a>
            );
          })}
        </div>

        <h2 class="text-3xl font-bold tracking-tight text-gray-900 mb-8">
          All {category} Terms
        </h2>

        {verticals.map(vertical => (
          <div class="mb-16">
            <h2 class="text-2xl font-bold tracking-tight text-gray-900 mb-8">
              {vertical}
            </h2>
            <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
              {entries
                .filter(entry => entry.data.vertical === vertical)
                .map(entry => (
                  <div class="relative group">
                    <a 
                      href={`/glossary/${entry.data.category.toLowerCase().replace(/\s+/g, '-')}/${entry.data.vertical.toLowerCase().replace(/\s+/g, '-')}/${entry.slug}`}
                      class="block p-6 bg-white rounded-2xl border border-gray-200 hover:border-blue-100 transition-all duration-200"
                    >
                      <h2 class="text-lg font-semibold text-gray-900 mb-3">
                        {entry.data.term}
                      </h2>
                      <p class="text-gray-600 text-sm line-clamp-3">
                        {entry.data.description}
                      </p>
                      <div class="mt-4 text-blue-500 font-medium inline-flex items-center group-hover:translate-x-1 transition-transform duration-200">
                        Learn more 
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" viewBox="0 0 20 20" fill="currentColor">
                          <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                        </svg>
                      </div>
                    </a>
                  </div>
                ))}
            </div>
          </div>
        ))}
      </div>
    </section>
  </main>
</BaseLayout> 