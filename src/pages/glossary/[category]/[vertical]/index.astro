---
import { getCollection } from 'astro:content';
import BaseLayout from '../../../../layouts/BaseLayout.astro';

export async function getStaticPaths() {
  const glossaryEntries = await getCollection('glossary');
  
  // Get unique category/vertical combinations
  const paths = [...new Set(glossaryEntries.map(entry => ({
    category: entry.data.category,
    vertical: entry.data.vertical
  })))];
  
  return paths.map(({ category, vertical }) => ({
    params: { 
      category: category.toLowerCase().replace(/\s+/g, '-'),
      vertical: vertical.toLowerCase().replace(/\s+/g, '-')
    },
    props: { 
      category,
      vertical,
      entries: glossaryEntries.filter(entry => 
        entry.data.category === category && 
        entry.data.vertical === vertical
      )
    },
  }));
}

const { category, vertical, entries } = Astro.props;
---

<BaseLayout title={`${vertical} ${category} Terms`} description={`${vertical} glossary terms related to ${category}`}>
  <Fragment slot="head">
    <link rel="canonical" href={new URL(Astro.url.pathname, Astro.site).toString()} />
  </Fragment>
  <main>
    <section class="bg-white">
      <div class="mx-auto max-w-7xl lg:px-16 md:px-12 px-8 xl:px-24 py-24">
        <h1 class="text-4xl font-bold tracking-tight text-gray-900 mb-4">
          {category} - {vertical} Terms
        </h1>
        <p class="text-xl text-gray-600 mb-12">
          Glossary terms related to {vertical} in {category}.
        </p>

        <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
          {entries.map(entry => (
            <div class="relative group">
              <a 
                href={`/glossary/${entry.data.category.toLowerCase().replace(/\s+/g, '-')}/${entry.data.vertical.toLowerCase().replace(/\s+/g, '-')}/${entry.slug}`}
                class="block p-6 bg-white rounded-2xl border border-gray-200 hover:border-blue-100 transition-all duration-200"
              >
                <h2 class="text-lg font-semibold text-gray-900 mb-3">
                  {entry.data.term}
                </h2>
                <p class="text-gray-600 text-sm line-clamp-3">
                  {entry.data.description}
                </p>
                <div class="mt-4 text-blue-500 font-medium inline-flex items-center group-hover:translate-x-1 transition-transform duration-200">
                  Learn more 
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-1" viewBox="0 0 20 20" fill="currentColor">
                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                  </svg>
                </div>
              </a>
            </div>
          ))}
        </div>
      </div>
    </section>
  </main>
</BaseLayout> 