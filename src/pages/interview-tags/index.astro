---
import { getCollection } from "astro:content";
import BaseLayout from "@/layouts/BaseLayout.astro";

// Function to format tag display
const formatTagDisplay = (tag: string) => {
  return tag
    .replace(/-/g, ' ')
    .split(' ')
    .map(word => word.charAt(0).toUpperCase() + word.slice(1))
    .join(' ');
};

const allInterviews = await getCollection("interview");
const tags = [...new Set(allInterviews.map((post) => post.data.tags).flat())].sort((a, b) => a.localeCompare(b));
const pageTitle = "Interview Guide Tags";

// Get tag counts
const tagCounts = tags.reduce((acc, tag) => {
  acc[tag] = allInterviews.filter(post => post.data.tags.includes(tag)).length;
  return acc;
}, {} as Record<string, number>);
---

<BaseLayout pageTitle={pageTitle}>
  <section>
    <div
      class="mx-auto max-w-7xl lg:px-16 md:px-12 px-8 xl:px-24 py-12 items-start">
      <h1 class="font-semibold text-purple-900 mt-6 text-3xl lg:mx-auto">
        Interview Guide Tags
      </h1>
      <p class="mt-4 text-lg text-slate-600">
        Browse our interview guides by topic
      </p>
      <ol role="list" class="mt-16 space-y-10 sm:space-y-16">
        <li>
          <ol
            role="list"
            class="mt-8 divide-y rounded-2xl bg-slate-50 py-3 px-6 text-base tracking-tight sm:px-8">
            {
              tags.map((tag) => (
                <li
                  class="flex justify-between py-3"
                  aria-label={`${formatTagDisplay(tag)} interview guides`}>
                  <a
                    class="text-sm font-medium text-blue-500 hover:text-purple-900"
                    href={`/interview-tags/${tag}`}>
                    {formatTagDisplay(tag)}
                  </a>
                  <span class="text-sm text-slate-500">
                    {tagCounts[tag]} {tagCounts[tag] === 1 ? 'guide' : 'guides'}
                  </span>
                </li>
              ))
            }
          </ol>
        </li>
      </ol>
    </div>
  </section>
</BaseLayout> 